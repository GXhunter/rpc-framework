<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.gxhunter</groupId>
    <artifactId>rpc-framework</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>
    <description>A remote service call based on java and spring</description>
    <url>https://github.com/GXhunter/rpc-framework</url>
    <developers>
        <developer>
            <id>hunter</id>
            <name>树荫下的天空</name>
            <roles>
                <role>master</role>
                <role>developer</role>
            </roles>
            <timezone>+8</timezone>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <scm>
        <url>${url}</url>
        <connection>git@github.com:GXhunter/rpc-framework.git</connection>
        <tag>${version}</tag>
    </scm>

    <properties>
        <encoding>UTF-8</encoding>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <netty.version>4.1.86.Final</netty.version>
        <kryo.version>4.0.2</kryo.version>
        <springboot.version>2.7.15</springboot.version>
        <curator-version>5.5.0</curator-version>
        <slf4j.version>1.7.25</slf4j.version>
        <!-- test -->
        <junit.jupiter.version>5.5.2</junit.jupiter.version>
        <junit.platform.version>1.10.0</junit.platform.version>
    </properties>
    <modules>
        <module>example-client</module>
        <module>example-server</module>
        <module>hello-service-api</module>
        <module>rpc-framework-common</module>
        <module>rpc-framework-core</module>
    </modules>
    <dependencies>
        <!-- lombok -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.8</version>
            <scope>provided</scope>
        </dependency>
        <!-- log -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>${slf4j.version}</version>
        </dependency>
        <!-- test -->
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.jupiter.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.platform</groupId>
            <artifactId>junit-platform-runner</artifactId>
            <version>${junit.platform.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <repositories>
        <repository>
            <id>aliyunmaven</id>
            <name>aliyunmaven</name>
            <url>https://maven.aliyun.com/repository/public</url>
            <layout>default</layout>
            <releases>
                <enabled>true</enabled>
            </releases>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>MavenCentral</id>
            <url>http://repo1.maven.org/maven2/</url>
        </repository>
        <repository>
            <id>aliyunmavenApache</id>
            <url>https://maven.aliyun.com/repository/apache-snapshots</url>
        </repository>
    </repositories>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <configuration>
                    <source>${maven.compiler.source}</source>
                    <target>${maven.compiler.target}</target>
                    <encoding>${encoding}</encoding>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
